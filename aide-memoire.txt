2.
- Langage de script, faiblement typé et dynamique
- Ecma International maintenant, normes CD-ROM, C#, C++, JSON (404), Dart
- Implems: JScript, Qt, Google Apps Script
- Influancé par C, Perl, Python, Java

3.
- date de création réelle pour Netscape, premier nom Mocha, puis LiveScript, en décembre annoncé dans la presse
- adoption par ecma
- gestion des erreurs, regex, …
- version 4 abandonnée pour des raisons de désacords, certaines features seront ajoutées dans la v6, v5 ne devait être qu'une 3.1
- grosses nouveautés, certaines reprises de la v4 (classes, modules, iterators et generators, destructuration)
- ES.Next nom dynamique des versions futures

4.
Un point sur la révolution et renommage

5.
Attention au `this`

6.
propriétés raccourcies

7.
propriétés calculées

8.
template strings

9.
destructuration

10.
let scopé, la déclaration dans les accolades n'écrase pas celle du scope supérieur, mais préférer ne pas avoir des variables de même nom pour une meilleure lisibilité et évité les confusions alors que le var est global

11.
const scopé comme let mais non modifiable

12.
modules
un fichier = un module
export par défaut ou nommé

13.
import par défaut, nommé

14.
map: clé/valeur où des objets peuvent être utilisés comme clé ou comme valeur
les clés sont ordonnées selon leur ordre d'insertion
règles spécifiques d'égalité des clés, stict sauf exceptions NaN = NaN alors que NaN !== NaN
set: 



?.
Promises
Une Promise est dans un de ces états :
pending (en attente) : état initial, la promesse n'est ni remplie, ni rompue ;
fulfilled (tenue) : l'opération a réussi ;
rejected (rompue) : l'opération a échoué ;
settled (acquittée) : la promesse est tenue ou rompue mais elle n'est plus en attente.
